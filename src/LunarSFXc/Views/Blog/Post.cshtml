@model LunarSFXc.ViewModels.PostViewModel

@{
    Layout = "_BlogLayout";
}

@{
    ViewBag.Title = Model.Title;
}
<section id="blog-post">
    <div class="container">
        <div class="row">

            <!-- Blog Post Content Column -->
            <div class="col-lg-8">

                <!-- Blog Post -->
                <!-- Title -->
                <h2>@Model.Title</h2>

                <!-- Author -->
                <p class="lead">
                    by @Model.PostedBy?.UserName
                </p>
                <p>
                    <span>Posted on @Model.PostedOn.ToString("d")</span>
                </p>

                <hr />

                <!-- Category -->
                <category for-category="Model.Category"></category>

                <div class="pull-right">
                    <!-- Tags -->
                    <tags tags for-tags="Model.Tags"></tags>
                </div>

                <!-- Date/Time -->
                <hr />

                <!-- Preview Image -->
                @if (!Model.Images.Any())
                {
                    <img class="img-responsive" src="http://placehold.it/900x300" alt="" />
                }
                else
                {
                    <img class="img-responsive" src="@Model.Images.FirstOrDefault()?.ImageUri" alt="@Model.Images.FirstOrDefault()?.FileName" />
                }

                <hr />

                <!-- Post Content -->
                <p>@Model.Description</p>

                <hr />

                @if (User.Identity.IsAuthenticated)
                {
                    <!-- Blog Comments-->
                    <!-- Comments Form -->
                    <div class="well">
                        @Component.InvokeAsync("CommentForm", new { user = User.Identity.Name, parentPost = Model }).Result
                    </div>
                }
                else
                {
                    <p>Please <a asp-controller="Auth" asp-action="Login" asp-route-returnUrl="@Context.Request.Path">sign in</a> to leave comments</p>

                }


                <hr />

                @if (Model.Comments.Any())
                {
                    <div class="well">@Component.InvokeAsync("Comments", new { comments = Model.Comments }).Result</div>
                }
            </div>

            <!-- Blog Sidebar Widgets Column -->
            <div class="col-lg-4">

                <!-- Blog Categories Well -->
                <div class="well">
                    @Component.InvokeAsync("Widget", new { sidebar = true }).Result
                </div>

                <!-- Side Widget Well -->
                <div class="well">
                    <h4>Side Widget Well</h4>
                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Inventore, perspiciatis adipisci accusamus laudantium odit aliquam repellat tempore quos aspernatur vero.</p>
                </div>
            </div>
        </div>
    </div>
</section>

@section scripts {
    <script>

    </script>
}